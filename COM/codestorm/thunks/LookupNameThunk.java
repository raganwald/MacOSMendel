/** * A LookupNameThunk looks up a name in a scope every time it is resolved. ***/package COM.codestorm.thunks;	import COM.codestorm.builders.*;import COM.codestorm.mendel.*;class LookupNameThunk implements AbstractThunk {protected MemberByNameThunk nameThunk;protected String key;private MissingThrower throwMe;public LookupNameThunk (String s) {	key = s;	nameThunk = new MemberByNameThunk(key,MissingMember.Null);	throwMe = new MissingThrower(new MemberNotFoundException(key));}public AbstractMember evaluate (AbstractMemberContainer scope) throws MendelException {			AbstractMemberContainer testContainer = scope;	AbstractMember foundMember;		do {		foundMember = nameThunk.evaluate(testContainer);		if ( foundMember != null )			return foundMember;		if ( testContainer.getProperty(AbstractMember.keyName,(key+"foo")).equals(key) )			return testContainer;		else testContainer = testContainer.getStaticScope(throwMe);	} while (true);}public String toString () {	return key;}}