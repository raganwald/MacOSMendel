/** * * AbstractValue.java * * Copyright (c) 1997 Codestorm Inc. * * @author Reginald Braithwaite-Lee ***/package COM.codestorm.mendel;import java.util.*;import COM.objectspace.jgl.*;public interface AbstractValue {/** * * getVariableType ***/ValueType getValueType () throws MendelException;/** * * putMember * * Destructively sets the member for this value. ***/void putMember (AbstractMember aMember) throws MendelException;/** * * getMember * * Answers the member for this value. ***/AbstractMember getMember () throws MendelException;/** * * addPrecursor * * Destructively adds a precursor value. Does not COW. ***/void addPrecursor (AbstractValue aValue) throws MendelException;Container getPrecursors () throws MendelException;Container getPrecursors (ValueType typeToMatch) throws MendelException;/** * * mergePrecursor * * Answers an AbstractValue merging the receiver with a precursor. ***/AbstractValue mergePrecursor (AbstractValue aValue) throws MendelException;/** * * mergePrecursors * * Answers an AbstractValue merging the receiver with a container of * precursors. ***/AbstractValue mergePrecursors (Container aContainer) throws MendelException;}